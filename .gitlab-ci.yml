stages:
  - clean-git-history-checking
  - conventional-commits-linting
  - conventional-commits-next-version-checking
  - version-badge-checking


clean-git-history-checking:
  stage: clean-git-history-checking
  image: rust
  before_script:
    - cargo install clean_git_history
  script:
    # Check all the commits in the branch.
    - /usr/local/cargo/bin/clean_git_history --from-reference "origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
  rules:
    - if: $CI_MERGE_REQUEST_ID


conventional-commits-linting:
  stage: conventional-commits-linting
  image: rust
  before_script:
    - cargo install conventional_commits_linter
  script:
    # Lint all the commits in the branch.
    - /usr/local/cargo/bin/conventional_commits_linter --from-reference "origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" --allow-angular-type-only
  rules:
    - if: $CI_MERGE_REQUEST_ID


conventional-commits-next-version-checking:
  stage: conventional-commits-next-version-checking
  image: rust
  before_script:
    - cargo install conventional_commits_next_version
  script:
    # Get current version and latest tag.
    - CURRENT_VERSION=$(cat VERSION)
    # Check latest tag is in semantic versioning.
    - echo "$CURRENT_VERSION" | grep "^[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*$"
    # Get latest tag.
    - LATEST_TAG=$(git describe --tags --abbrev=0)
    # Check latest tag is in semantic versioning.
    - echo "$LATEST_TAG" | grep "^[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*$"
    # Check current vs expected.
    - /usr/local/cargo/bin/conventional_commits_next_version --batch-commits --from-reference "$LATEST_TAG" --from-version "$LATEST_TAG" --current-version "$CURRENT_VERSION"
  rules:
    - if: $CI_MERGE_REQUEST_ID


version-badge-checking:
  stage: version-badge-checking
  image: alpine
  script:
    # Get current version and latest tag.
    - CURRENT_VERSION=$(cat VERSION)
    # Check latest tag is in semantic versioning.
    - echo "$CURRENT_VERSION" | grep "^[0-9][0-9]*.[0-9][0-9]*.[0-9][0-9]*$"
    # Check README version badge and version match.
    - grep "(https://img.shields.io/badge/Version-$CURRENT_VERSION-blue)]" README.md
  rules:
    - if: $CI_MERGE_REQUEST_ID
